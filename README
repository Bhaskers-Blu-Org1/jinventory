jinventory:
-------
The inventory package is a tool that harvests data from sysfs and presents the data
in JSON format on stdout. 
It supports CPU, network, and strorage devices.

** This release moved the guts of the code into a library called libjinventory
   so it could be easily consumed elsewhere.
   It also requires autoreconf to be run. This was done to make it palatable to
   some cross compilation environments it is being used in.

Source:
-------
github.com/ibm/jinventory

Mailing list:
-------------

License:
--------
See 'LICENSE' file.

Compilation dependencies:
-------------------------
- C and C++ compiler (gcc, g++)
- GNU build tools (automake, autoconf, libtool, etc)
- yum: libudev-devel  Debian: libudev-dev
- yum: json-c-devel   Debian: libjson0 libjson0-dev

 libjinventory should be built and installed first
 github.com/ibm/libjinventory

Binary dependencies:
-------------
  libjinventory libudev & json-c .so 

Building:
---------
$ autoreconf --install --force
$ ./configure
$ make
$ make install

The binary "jinventory" will be installed to /usr/local/bin

Examples:

[root@sps1:~]$ jinventory storage
{ "drive00": { "info": { "path": "pci-0000:1b:00.0-scsi-0:2:0:0", "device": "\/dev\/sda", "vendor": "IBM", "model": "ServeRAID_M5110", "revision": "3.19", "snum": "3600605b0051b04b01b46d280226fbbce", "size": "11718746112", "scsi_generic": "sg0" } } }

[root@sps1:~]$ inventory storage | python -m json.tool
{
    "drive00": {
        "info": {
            "device": "/dev/sda",
            "model": "ServeRAID_M5110",
            "path": "pci-0000:1b:00.0-scsi-0:2:0:0",
            "revision": "3.19",
            "scsi_generic": "sg0",
            "size": "11718746112",
            "snum": "3600605b0051b04b01b46d280226fbbce",
            "vendor": "IBM"
        }
    }
}
[root@sps1:~]$ 


Building rpms:
--------------
To build a tarball to feed to rpmbuild, do

$ make dist-gzip

As an example, use a command similar to the following:

$ rpmbuild -ba [--target=ppc64le] <path-to-spec-file>

Hacking:
--------
All patches should be sent to the mailing list with linux-kernel style
'Signed-Off-By'. The following git commands can be used:
- git commit -s
- git format-patch

You probably want to read the linux Documentation/SubmittingPatches as
much of it applies to pfs-inventory

Submitting patch:
-----------------

  Subject: [jinventory] Summary

--